procedure proc1 {
    read v1;
    read v2;
    read v3;
    read v4;
    read v5;

    print v1;
    print v6;
    print v7;

    while (v1 > v5) {
        read v8;
        v2 = v1 + v3;
        v4 = v2;
        call proc2;
        v5 = v4 - 1 + 2 + 3 + 4 - 5 - 6 -7 -8 -9 -10;
        v7 = v7 * 11 * 12 * 13 * 14 * 15 * 16 * 17 / 18 / 19 / 20;
        v8 = v7 * v9;
        v9 = 0;
        if (v10 < v7 + v9) then {
            v10 = 2;
            v11 = v10;
            v4 = v3;
            call proc3;
            if (v2 == 1) then {
                print v12;
                read v13;
                v14 = v14 - v11;
            } else {
                v12 = v11 - v10;
            }
            print v8;
            v7 = v2 + v14;
        } else {
            print v11;
            while (v11 != 8) {
                read v15;
                v15 = v14 - 1;
                v14 = v15 + 1;
                v16 = v17;
                if (v17 < 2) then {
                    v18 = v12 + 1;
                } else {
                    print v10;
                }
            }
            call proc4;
            v5 = v6 - 1;
        }

        v1 = 21;
        v6 = 22;
        v7 = 23;
        v8 = v1 + v2 + v7;

        print v12;
    }

    v9 = v8 - v7;
    v15 = v17 + v16;
    read v19;
    read v20;
    call proc2;

    if (v15 > 0) then {
        v18 = v15 - v20;
        read v21;
    } else {
        print v22;
        if (v21 > v11) then {
            v11 = v18;
            v19 = v20;
        } else {
            read v20;
        }
    }

    print v1;
    print v2;
    v3 = v4 + v5 + v6;
    v4 = v3;

    while (v10 < v8) {
        v10 = v8;
    }
}

procedure proc2 {
    read v3;
    read v4;
    read v5;
    read v10;
    v1 = v8 - v7;
    v9 = v1 + v2;
    
    if (v1 > v20) then {
        print v1;
        read v20;
    } else {
        call proc5;
        v8 = v7 - 1;
        v7 = v7 + v6;
        while (v1 == 9) {
            v20 = v19 - v18;
            v18 = v20;
            print v2;
        }
    }

    read v19;
    print v19;
    while (v17 < v16 * 24) {
        v16 = v15;
        v20 = v21;
    }

    while (v23 > v24) {
        v20 = 3;
    }

    print v2;
}

procedure proc3 {
    read v4;
    read v5;
    print v6;
    v8 = v9 + v10;
    v10 = v11;
    if (v8 < v10) then {
        v13 = v10;
        v14 = v10;
        read v10;
    } else {
        read v13;
        read v14;
        while (v12 > v4) {
            print v5;
            print v6;
        }
    }
}

procedure proc4 {
    read a;
    read b;
    read c;
    print d;
    a = b - 1 + c;
    b = a -1 + b;
    c = b + c - a;
    if (a < b) then {
        v1 = v2 + v3;
        v3 = v4;
        v4 = v1;
    } else {
        c = d + e + f + 25 + 26 + 27 + 28 + 29 + 30;
        e = 31 % 32 % 33 % 34 % 35 % 36 % 37 % 38 * 39 - 40;
        while (a < b) {
            a = a + 2;
            b = e + f;
            f = g + a;
            g = g - 1;
            call proc7;
            a = 1;
            b = 2;
        }
    }

    read v10;
    read v11;
    print v12;
}

procedure proc5 {
    read v20;
    read v15;
    call proc6;
    while (v1 - v2 == 9) {
        print v3;
        v3 = v11 - v12;
        v20 = v19 - v18;
    }

    while (v3 < v4) {
        v17 = 5;
        v18 = v17;
        v19 = v18 + 1;
        v20 = 4;
    }

    read v20;
}

procedure proc6 {
    read b;
    read c;
    print a;
    if (a < b) then {
        a = b;
        b = c;
        c = a;
        d = 5;
    } else {
        while (a < b) {
            read e;
            print d;
            f = f - 1;
            g = f;
            a = c;
            read d;
        }
    }

    call proc7;
    print h;
    print f;
    f = g - h;
}

procedure proc7 {
    read f;
    read g;
    
    while (a < b) {
        print f;
        f = g;
        g = h;
    }

    if (a + b == 0) then {
        e = c - d;
    } else {
        e = c / d;
        print e;
    }

    if (d == 3) then {
        print c;
        read d;
    } else {
        print d;
        d = c - 2;
        e = d + 1;
    }

}