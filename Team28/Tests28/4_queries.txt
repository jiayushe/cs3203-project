1 - [No such-that/pattern] All statements
stmt    stmt;
Select stmt
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61
5000
2 - [No such-that/pattern] All read statements
read Select  ;
Select    Select
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 46, 61
5000
3 - [No such-that/pattern] All print statements
print SYNONYM;
Select    SYNONYM
14, 15, 17, 25, 31, 38, 39, 45, 49, 53, 56, 58
5000
4 - [No such-that/pattern] All while statements
while Follows;
Select Follows
24, 54
5000
5 - [No such-that/pattern] All if statements
if           Parent;
Select       Parent
16, 29, 41
5000
6 - [No such-that/pattern] All assign statements
assign Uses;
Select Uses
18, 19, 21, 22, 23, 27, 28, 30, 32, 33, 35, 36, 40, 42, 43, 44, 47, 50, 51, 52, 55, 59
5000
7 - [No such-that/pattern] All variables
variable v;
Select v
v1, v2, v3, unused, unmodified, v4, v5, v6, v7, v8, v9, v10, v11, x, y, z, v12, a, b, c
5000
8 - [No such-that/pattern] All constants
constant p;
stmt s; Select p
1, 5, 2, 3, 30, 123, 8, 0, 10, 400, 100, 4
5000
9 - [No such-that/pattern] All procedures
procedure proCe123;
Select   proCe123
proc1, PROC2, proc3, proc4, proc5, proc6
5000
10 - [No such-that/pattern] All procedures (duplicate synonym)
procedure p, p;
Select p
none
5000
11 - [No such-that/pattern] All procedures (missing synonym)
procedure p;
Select q
none
5000
12 - [No such-that/pattern] All procedures (invalid variable name)
procedure _p;
Select _p
none
5000
13 - [No such-that/pattern] All procedures (invalid declaration)
proc p;
Select p
none
5000
14 - [No such-that/pattern] All procedures (invalid selection clause)
procedure p;
Select p;
none
5000
15 - [1 Modifies] All procedures (semantically invalid)
procedure p;
Select p such that Modifies(_, _)
none
5000
16 - [1 Modifies] All if statements which modify some variables
if ifs;
Select ifs such that Modifies(ifs, _)
16, 29, 41
5000
17 - [1 Modifies] All print statements which modify some variables
print p;
Select p such that Modifies(p, _)
none
5000
18 - [1 Modifies] All variables modified by if statements
if i; variable v;
Select v such that Modifies(i, v)
v1, v2, x, y, z, v6, v5, v10, v12, v8, v3
5000
19 - [1 Modifies] All variables modified by read statements
read r; variable v;
Select v such that Modifies(r, v)
v1, v2, v3, unused, unmodified, v4, v5, v6, v7, v8, v9, v10, v11, v12
5000
20 - [1 Modifies] All variables modified by while statements
while w; variable v;
Select v such that Modifies(w, v)
v4, v12, v6, v5, v10
5000
21 - [1 Modifies] All variables which modify some statements
variable v; stmt s;
Select v such that Modifies(v, s)
none
5000
22 - [1 Modifies] All assign statements which modify variable 'print'
assign a;
Select a such that Modifies(a, "v8")
none
5000
23 - [1 Modifies] All statements which modify variable 'v8'
stmt s;
Select s such that Modifies(s, "v8")
10, 16, 20, 46
5000
24 - [1 Modifies] All statements which modify variable 'unmodified'
stmt s;
Select s such that Modifies(s, "unmodified")
5
5000
25 - [1 Modifies] All statements which modify statement 5
stmt s;
Select s such that Modifies(s, 5)
none
5000
26 - [1 Modifies] All constants, as long as statement 1 modifies some variables
constant c;
Select c such that Modifies(1, _)
1, 4, 5, 2, 3, 30, 123, 8, 0, 10, 400, 100
5000
27 - [1 Modifies] All print statements, as long as statement 100 modifies some variables
print p;
Select p such that Modifies(100, _)
none
5000
28 - [1 Modifies] All variables modified by statement 24 (while)
variable v;
Select v such that Modifies(24, v)
v12, v6, v5, v10
5000
29 - [1 Modifies] All variables modified by statement 29
variable v;
Select v such that Modifies(29, v)
v10
5000
30 - [1 Modifies] All variables modified by variable 'v1'
variable v;
Select v such that Modifies("v1", v)
none
5000
31 - [1 Modifies] All procedures, as long as statement 16 modifies variable 'v1'
procedure p;
Select p such that Modifies(16, "v1")
proc1, PROC2, proc3, proc4, proc5, proc6
5000
32 - [1 Modifies] All procedures, as long as statement 16 modifies variable 'unmodified'
procedure p;
Select p such that Modifies(16, "unmodified")
none
5000
33 - [1 Uses] All while statements which use some variables
while w;
Select w   such that Uses(w,_)
24, 54
5000
34 - [1 Uses] All read statements which use some variables
read r;
Select r such that Uses ( r , _ )
none
5000
35 - [1 Uses] All variables used by assign statements
assign a; variable v;
Select v such that Uses (a,v)
v1, x, z, v2, v4, v5, v6, v7, v10, v11, v3, v12, y, b, c
5000
36 - [1 Uses] All variables used by if statements
if i; variable v;
Select v such that Uses(i, v)
v1, v2, v3, v4, unmodified, x, z, v9, v10, v5, v6, v7, v11, v8, a, y
5000
37 - [1 Uses] All assign statements which use the variable 'v2'
assign a;
Select a such that Uses(a, "v2")
27, 32, 50
5000
38 - [1 Uses] All print statements which use the variable 'unused'
print p;
Select p such that Uses(p, "unused")
none
5000
39 - [1 Uses] All statements which use the variable 'unmodified'
stmt s;
Select s such that   Uses(s,"unmodified")
16, 58, 37
5000
40 - [1 Uses] All procedures, as long as statement 1 uses some variables
procedure p;
Select p such that Uses(1, _)
none
5000
41 - [1 Uses] All procedures, as long as statement 0 uses some variables
procedure p;
Select p such that Uses(0, _)
none
5000
42 - [1 Uses] All procedures, as long as statement 17 uses some variables
procedure p;
Select p such that Uses(29, _)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
43 - [1 Uses] All variables used by statement 27
variable v;
Select v such that Uses(27, v)
v1, v2, v4, v5
5000
44 - [1 Uses] All variables used by statement 29 (if)
variable v;
Select v such that Uses(29, v)
v1, v10, v11, a
5000
45 - [1 Uses] All read statements, as long as statement 1 uses variable 'read'
read r;
Select r such that Uses(1, "v1")
none
5000
46 - [1 Uses] All read statements, as long as statement 19 uses variable 'v1'
read r;
Select r such that Uses(29, "v1")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 46, 61
5000
47 - [1 Uses] All procedures, as long as statement 19 uses variable 'v2'
procedure p;
Select p such that Uses(19, "v2")
none
5000
48 - [1 Parent] All if statements, as long as there exists at least one Parent relationship
if i;
Select i such that  Parent ( _,_ )
16, 29, 41
5000
49 - [1 Parent] All statements which are children of some statements
stmt s;
Select s such that Parent(_, s)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43, 44, 55
5000
50 - [1 Parent] All procedures, as long as statement 1 is a child of some statements
procedure p;
Select p such that Parent(_, 1)
none
5000
51 - [1 Parent] All procedures, as long as statement 100 is a child of some statements
procedure p;
Select p such that Parent(_, 58)
none
5000
52 - [1 Parent] All procedures, as long as statement 20 is a child of some statements
procedure p;
Select p such that Parent(_ ,20)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
53 - [1 Parent] All procedures, as long as variable 'v1' is a child of some statements
procedure p;
Select p such that Parent(_, "v1")
none
5000
54 - [1 Parent] All statements which are parents of some statements
stmt s;
Select s such that Parent(s, _)
16, 24, 29, 41, 54
5000
55 - [1 Parent] All print statements which are parents of some statements
print p;
Select p such that Parent(p, _)
none
5000
56 - [1 Parent] All while statements which are parents of some if statements
while w; if i;
Select w such that Parent(w, i)
24
5000
57 - [1 Parent] All if statements which are parents of some if statements
if i1, i2;
Select i1 such that Parent(    i1, i2)
none
5000
58 - [1 Parent] All while statements which are children of some if statements
while w; if i;
Select w such that Parent(i, w)
24
5000
59 - [1 Parent] All statements which are parent of statement 1
stmt s;
Select s such that Parent(s, 1)
none
5000
60 - [1 Parent] All statements which are parent of statement 18
stmt s;
Select s such that Parent(s,18)
16
5000
61 - [1 Parent] All procedures, as long as statement 26 is a parent of some statements
procedure p;
Select p such that Parent(26, _)
none
5000
62 - [1 Parent] All procedures, as long as statement 99 is a parent of some statements
procedure p;
Select p such that Parent(99, _)
none
5000
63 - [1 Parent] All procedures, as long as statement 16 is a parent of some statements
procedure p;
Select p such that Parent(16, _)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
64 - [1 Parent] All procedures, as long as variable 'v1' is a parent of some statements
procedure p;
Select p such that Parent("v1", _)
none
5000
65 - [1 Parent] All assign statements that are children of statement 24
assign a;
Select a such that Parent(24, a)
27, 28
5000
66 - [1 Parent] All statements that are children of statement 24
stmt s;
Select s such that Parent(24, s)
25, 26, 27, 28, 29
5000
67 - [1 Parent] All procedures, as long as statement 24 is the parent of statement 25
procedure p;
Select p such that Parent(24, 25)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
68 - [1 Parent] All procedures, as long as statement 24 is the parent of statement 30
procedure p;
Select p such that Parent(24, 30)
none
5000
69 - [1 Parent*] All procedures, as long as there exist at least one Parent* relationship
procedure p;
Select p such that Parent*(_, _)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
70 - [1 Parent*] All read statements which are descendants of some statements
read r;
Select r such that Parent*(_, r)
26
5000
71 - [1 Parent*] All if statements which are descendants of some statements
if i;
Select i such that Parent*(_, i)
29
5000
72 - [1 Parent*] All procedures, as long as statement 26 is a descendant of some statements
procedure p;
Select p such that Parent*(_, 26)
proc3,proc5,proc4,proc6,PROC2,proc1
5000
73 - [1 Parent*] All procedures, as long as statement 0 is a descendant of some statements
procedure p;
Select p such that Parent*(_, 0)
none
5000
74 - [1 Parent*] All procedures, as long as statement 24 is a descendant of some statements
procedure p;
Select p   such that  Parent* (_,24)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
75 - [1 Parent*] All assign statements which are ancestors of some statements
assign a;
Select a such that Parent*(a, _)
none
5000
76 - [1 Parent*] All statements which are ancestors of some statements
stmt s;
Select s such that Parent*(s, _)
16, 24, 29, 41, 54
5000
77 - [1 Parent*] All assign statements which are descendants of some while statements
assign a; while w;
Select a such that Parent*(w, a)
27, 28, 30, 55
5000
78 - [1 Parent*] All while statements which are ancestors of some if statements
while w; if i;
Select w such that Parent*(w, i)
24
5000
79 - [1 Parent*] All read statements which are ancestors of some print statements
read r; print p;
Select r such that  Parent*(  p, r   )
none
5000
80 - [1 Parent*] All statements which are descendants of some other statements
stmt s1, s2;
Select s2 such that Parent*(s1, s2)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43, 44, 55
5000
81 - [1 Parent*] All statements which are ancestors of statement 30
stmt s;
Select s such that Parent*(s, 30)
29, 24, 16
5000
82 - [1 Parent*] All if statements that are ancestors of statement 25
if i;
Select i such that Parent*(i, 25)
16
5000
83 - [1 Parent*] All procedures as long as statement 1 is an ancestor of some statements
procedure p;
Select p such that Parent*(1, _)
none
5000
84 - [1 Parent*] All procedures as long as statement 0 is an ancestor of some statements
procedure p;
Select p such that Parent*(0, _)
none
5000
85 - [1 Parent*] All procedures as long as statement 16 is an ancestor of some statements
procedure p;
Select p such that Parent*(16, _)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
86 - [1 Parent*] All print statements that are descendants of statement 24
print p;
Select p such that Parent*(24, p)
25, 31
5000
87 - [1 Parent*] All assign statements that are descendants of statement 16
assign a;
Select a such that Parent*(16, a)
18, 19, 21, 22, 23, 27, 28, 30
5000
88 - [1 Parent*] All procedures, as long as statement 16 is an ancestor of statement 30
procedure p;
Select p such that Parent*(16, 30)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
89 - [1 Parent*] All TRUE, as long as statement 16 is an ancestor of statement 15
procedure p;
Select BOOLEAN such that Parent*(16, 15)
FALSE
5000
90 - [1 Follows] All procedures, as long as there exist at least one Follows relationship
procedure p;
Select p such that Follows(_, _)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
91 - [1 Follows] All statements which follows some statements
stmt s;
Select s such that Follows(_, s)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 60
5000
92 - [1 Follows] All procedures, as long as statement 17 follows some other statement
procedure p;
Select p such that Follows(_, 17)
none
5000
93 - [1 Follows] All procedures, as long as statement 101 follows some other statement
procedure p;
Select p such that Follows (_,101)
none
5000
94 - [1 Follows] All procedures, as long as statement 29 follows some other statement
procedure p;
Select p such that Follows(_, 20)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
95 - [1 Follows] All statements which are followed by some statements
stmt s;
Select s such that Follows(s, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 59
5000
96 - [1 Follows] All statements which follows some statements
stmt s1, s2;
Select s2 such that Follows(s1, s2)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 60
5000
97 - [1 Follows] All print statements which are followed by some read statements
read r; print p;
Select p such that Follows(p, r)
25, 45
5000
98 - [1 Follows] All statements which are followed by statement 25
stmt s;
Select s such that Follows(s, 25)
none
5000
99 - [1 Follows] All statements which are followed by statement 16
stmt s;
Select s such that Follows(s, 16)
15
5000
100 - [1 Follows] All procedures, as long as statement 5 is followed by some statement
procedure p;
Select p such that Follows(5, _)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
101 - [1 Follows] All procedures, as long as statement 29 is followed by some statement
procedure p;
Select p such that Follows(29, _)
none
5000
102 - [1 Follows] All procedures, as long as statement 61 is followed by some statement
procedure p;
Select p such that Follows(61, _)
none
5000
103 - [1 Follows] All statements which follow statement 16
stmt s;
Select s such that Follows(16,s )
32
5000
104 - [1 Follows] All assign statements which follow statement 10
assign a;
Select a such that Follows(10, a)
none
5000
105 - [1 Follows] TRUE, as long as statement 45 follows statement 41

Select BOOLEAN such that Follows(41, 45)
TRUE
5000
106 - [1 Follows] All procedures, as long as statement 21 follows statement 20
procedure p;
Select p such that Follows(20, 21)
none
5000
107 - [1 Follows*] All procedures, as long as there exists at least one Follows* relationship

Select BOOLEAN such that Follows*(_, _)
TRUE
5000
108 - [1 Follows*] All statements which follows* some other statements
stmt s;
Select s such that Follows*(_, s)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 60
5000
109 - [1 Follows*] All procedures, as long as statement 29 follows* some other statements
procedure p;
Select p  such that  Follows*(_, 29)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
110 - [1 Follows*] All procedures, as long as statement 1 follows* some other statements
procedure p;
Select p such that Follows*(_, 1)
none
5000
111 - [1 Follows*] All procedures, as long as statement 1000 follows* some other statements
procedure p;
Select p such that Follows*(_, 1000)
none
5000
112 - [1 Follows*] All assign statements which follows* some other statements
assign a;
Select a such that Follows*(_, a)
18, 19, 22, 23, 27, 28, 32, 33, 35, 36, 43, 47, 51, 52
5000
113 - [1 Follows*] All assign statements which are followed* by some other statements
assign a;
Select a such that Follows*(a, _)
18, 19, 21, 22, 23, 27, 28, 32, 33, 35, 36, 40, 42, 47, 50, 51, 59
5000
114 - [1 Follows*] All while statements that follows* if statements
while w; if i;
Select w such that Follows*(i, w)
none
5000
115 - [1 Follows*] All statements which are followed* by other statements
stmt s1, s2;
Select s1 such that Follows*(s1, s2)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 59
5000
116 - [1 Follows*] All read statements which follows* while statements
while w; read r;
Select r such that Follows*(w, r)
none
5000
117 - [1 Follows*] All statements which are followed* by statement 24
stmt s;
Select s such that Follows*(s, 24)
21, 22, 23
5000
118 - [1 Follows*] All procedures, as long as statement 13 is followed* by some statements
procedure p;
Select p such that Follows*(13, _)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
119 - [1 Follows*] All procedures, as long as statement 20 is followed* by some statements
procedure p;
Select p such that Follows*(20, _)
none
5000
120 - [1 Follows*] All procedures, as long as statement 0 is followed* by some statements
procedure p;
Select p such that Follows*(0, _)
none
5000
121 - [1 Follows*] All statements which follows* statement 15
stmt s;
Select s such that Follows*(15, s)
16, 32, 33, 34, 35, 36, 37, 38, 39 
5000
122 - [1 Follows*] All procedures, as long as statement 1 is followed* by statement 17
procedure p;
Select p such that Follows*(1, 17)
none
5000
123 - [1 Follows*] All procedures, as long as statement 1 is followed* by statement 33
procedure p;
Select p such that Follows*(1, 33)
proc1, PROC2, proc3, proc4, proc5, proc6
5000
124 - [1 Pattern] All procedures, as long as there exists at least one assign statement
procedure p; assign pattern;
Select p pattern pattern(   _, _   )
proc1, PROC2, proc3, proc4, proc5, proc6
5000
125 - [1 Pattern] All procedures, as long as there exists at least one statement (semantically invalid)
procedure p; stmt s;
Select p pattern s(_, _)
none
5000
126 - [1 Pattern] All assign statements with the RHS pattern 'z'
assign pattern;
Select pattern pattern pattern(_,_"    z"_)
22, 35
5000
127 - [1 Pattern] All assign statements with the RHS pattern '2'
assign a;
Select a pattern  a  ( _   , _"        2   "_)
18, 22, 47, 52
5000
128 - [1 Pattern] All assign statements with the RHS pattern 'unused'
assign a;
Select a pattern a(_, _"unused"_)
none
5000
129 - [1 Pattern] All variables that are on the LHS on some assign statements
assign a; variable v;
Select v pattern a(v, _)
v1, v2, x, y, z, v6, v5, v10, v9, v12, v4, v3, v7, a
5000
130 - [1 Pattern] All variables that are on the LHS of some assign statements with the RHS pattern 'v2'
assign a; variable v;
Select v pattern a(v, _"v2"_)
v6, v1, v5
5000
131 - [1 Pattern] All variables that are on the LHS of some assign statements with the RHS pattern 'unused'
assign a; variable v;
Select v pattern a ( v , _"unused   "_)
none
5000
132 - [1 Pattern] All assign statements with the LHS 'x'
assign Parent;
Select Parent pattern Parent("x", _)
21, 40
5000
133 - [1 Pattern] All assign statements with the LHS 'v13'
assign a;
Select a pattern a("v13", _)
none
5000
134 - [1 Pattern] All assign statements with the LHS 'x' and RHS pattern 'y'
assign a;
Select a    pattern a("x", _"y"_)
40
5000
135 - [1 Pattern] All assign statements with the LHS 'x' and RHS pattern 'x'
assign a;
Select a pattern a("x", _"x"_)
21
5000
136 - [1 Pattern ifs clause] All ifs statements that uses variables in condition
if ifs;
Select ifs pattern ifs(_,_,_)
16, 29, 41
5000
137 - [1 Pattern ifs clause] All ifs statements that uses 'x' in condition
if ifs;
Select ifs pattern ifs("x",_,_)
41
5000
138 - [1 Pattern while clause] All while statements that uses variables in condition
while w;
Select w pattern w(_,_)
24, 54
5000
139 - [1 Pattern ifs clause] All while statements that uses 'x' in condition
while w;
Select w pattern w("x",_)
24
5000
140 - [With value] BOOLEAN (meaningless)

Select BOOLEAN with 12 = 12
TRUE
5000
141 - [With stmt] BOOLEAN (meaningless)
assign a;
Select BOOLEAN with a.stmt# = 12
FALSE
5000
142 - [With procName] BOOLEAN (meaningless)
procedure p;
Select BOOLEAN with p.procName = "proc"
FALSE
5000
143 - [With varName] BOOLEAN (meaningless)
variable v;
Select BOOLEAN with v.varName = "v1"
TRUE
5000
144 - [Calls] TRUE as long as there is a procedure that calls another

Select BOOLEAN such that Calls(_,_)
TRUE
5000
145 - [Calls] All procedures which calls another procedure
procedure p;
Select p such that Calls(p,_)
proc1, PROC2, proc4, proc5
5000
146 - [Calls] All procedures which is called by another procedure
procedure p;
Select p such that Calls(_,p)
PROC2, proc3, proc4, proc5, proc6
5000
147 - [Calls] TRUE as long as procedure p calls q
procedure p, q;
Select BOOLEAN such that Calls(p, q)
TRUE
5000
148 - [Calls] All procedures which calls 'proc3'
procedure p;
Select p such that Calls(p, "proc3")
proc1, PROC2
5000
149 - [Calls] All procedures which is called by 'proc5'
procedure p;
Select p such that Calls("proc5", p)
proc6
5000
150 - [Calls] All procedures as long as 'PROC2' calls 'proc3'
procedure p;
Select p such that Calls("PROC2", "proc3")
proc1, PROC2, proc3, proc4, proc5, proc6
5000
151 - [Calls] All procedues called by 'procx'
procedure p;
Select p such that Calls("procx", p)
none
5000
152 - [Calls*] TRUE as long as there is a procedure that calls another

Select BOOLEAN such that Calls*(_,_)
TRUE
5000
153 - [Calls*] All procedures which calls another procedure
procedure p;
Select p such that Calls*(p,_)
proc1, PROC2, proc4, proc5
5000
154 - [Calls*] All procedures which is called by another procedure
procedure p;
Select p such that Calls*(_,p)
PROC2, proc3, proc4, proc5, proc6
5000
155 - [Calls] TRUE as long as procedure p calls q indirectly or directly
procedure p, q;
Select BOOLEAN such that Calls(p, q)
TRUE
5000
156 - [Calls*] All procedures which calls 'proc5' indirectly or directly
procedure p;
Select BOOLEAN such that Calls*(p, "proc5")
TRUE
5000
157 - [Calls*] All procedures which is called by 'proc1' indirectly or directly
procedure p;
Select BOOLEAN such that Calls*("proc1", p)
TRUE
5000
158 - [Calls*] All procedures which is called by 'procx' indirectly or directly
procedure p;
Select BOOLEAN such that Calls*("procx", p)
FALSE
5000
159 - [Calls*] TRUE as long as 'proc3' calls 'proc1' directly or indirectly

Select BOOLEAN such that Calls*("proc3", "proc1")
FALSE
5000
160 - [Calls*] None if wrong arg type
assign a;
Select BOOLEAN such that Calls*("proc3", a)
FALSE
5000
161 - [Next] TRUE as long as some line can be executed immediately after another line

Select BOOLEAN such that Next(_,_)
TRUE
5000
162 - [Next] All prog_lines that can be executed immediately after another line
prog_line n;
Select n such that Next(_,n)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 60
5000
163 - [Next] All prog_lines that can be executed immediately before another line
prog_line n;
Select n such that Next(n, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59
5000
164 - [Next] TRUE as long as prog_line 2 can be executed after another line

Select BOOLEAN such that Next(_, 2)
TRUE
5000
165 - [Next] TRUE as long as prog_line 58 can be executed before another line

Select BOOLEAN such that Next(58, _)
FALSE
5000
166 - [Next] TRUE as long as prog_line 3 can be executed after prog_line 2

Select BOOLEAN such that Next(2,3)
TRUE
5000
167 - [Next] TRUE as long as prog_line 48 can be executed after prog_line 48

Select BOOLEAN such that Next(46, 48)
FALSE
5000
168 - [Next] All stmt s that can be executed after prog_line 49
stmt s;
Select s such that Next(49, s)
none
5000
169 - [Next] All stmt s that can be executed after stmt 43
stmt s;
Select s such that Next(43, s)
45
5000
170 - [Next] All stmt s that can be executed before prog_line 24
stmt s;
Select s such that Next(s, 24)
23, 30, 31
5000
171 - [Next] All prog_line n that can be executed before stmt 32
prog_line n;
Select n such that Next(n, 32)
24, 20
5000
172 - [Next*] TRUE as long as some line can be executed after another line

Select BOOLEAN such that Next*(_,_)
TRUE
5000
173 - [Next*] All prog_lines that can be executed after another line
prog_line n;
Select n such that Next*(_,n)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 60
5000
174 - [Next*] All prog_lines that can be executed before another line
prog_line n;
Select n such that Next*(n, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59
5000
175 - [Next*] TRUE as long as prog_line 2 can be executed after any line

Select BOOLEAN such that Next*(_, 2)
TRUE
5000
176 - [Next*] TRUE as long as prog_line 58 can be executed before anyline

Select BOOLEAN such that Next*(58, _)
FALSE
5000
177 - [Next*] TRUE as long as prog_line 4 can be executed after prog_line 2

Select BOOLEAN such that Next*(2,4)
TRUE
5000
178 - [Next*] TRUE as long as prog_line 25 can be executed after prog_line 26

Select BOOLEAN such that Next*(25, 26)
TRUE
5000
179 - [Next*] All stmt s that can be executed after prog_line 41
stmt s;
Select s such that Next*(41, s)
42, 43, 44, 45, 46, 47, 48, 49
5000
180 - [Next*] All stmt s that can be executed after stmt 55
stmt s;
Select s such that Next*(55, s)
54, 55, 56, 57, 58
5000
181 - [Next*] All stmt s that can be executed before prog_line 21
stmt s;
Select s such that Next*(s, 21)
16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
5000
182 - [Next*] All prog_line n that can be executed before stmt 30
prog_line n;
Select n such that Next*(n, 30)
16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
5000
183 - [Next*] All prog_line n that can be executed before stmt 40
prog_line n;
Select n such that Next*(n, 40)
none
5000
184 - [1 Modifies tuple] All variables modified by while statements
while w; variable v;
Select <w, v> such that Modifies(w, v)
54 v4, 24 v12, 24 v6, 24 v5, 24 v10
5000
185 - [1 Uses tuple] All variables used by assign statements
assign a; variable v;
Select <a, v> such that Uses (a,v)
18 v1, 19 v1, 21 x, 22 z, 27 v1, 27 v2, 27 v4, 27 v5, 28 v6, 28 v7, 30 v10, 30 v11, 32 v2, 32 v3, 33 v11, 33 v10, 33 v12, 35 x, 35 y, 35 z, 40 y, 42 x, 44 x, 47 v1, 50 v2, 51 v3, 52 v4, 55 v5, 59 b, 59 c
5000
186 - [1 Parent tuple] All while statements which are parents of some if statements
while w; if i;
Select <w, i> such that Parent(w, i)
24 29
5000
187 - [1 Follows* tuple] All call statements which follows* while statements
while w; call c;
Select <w, c> such that Follows*(w, c)
54 57
5000
188 - [1 Pattern] All variables that are on the LHS on some assign statements
assign a; variable v;
Select <a, v> pattern a(v, _)
18 v1, 19 v2, 21 x, 22 y, 23 z, 27 v6, 28 v5, 30 v10, 32 v5, 33 v9, 35 v7, 36 v12, 40 x, 42 y, 43 v2, 44 y, 47 v1, 50 v1, 51 v2, 52 v3, 55 v4, 59 a
5000
189 - [1 Modifies, 1 Uses, 1 Pattern, with stmt#]
stmt s; assign a; variable v; 
Select s such that Modifies(a, v) and Uses(s, v) pattern a("v2",_) with s.stmt# = 50
50
5000
190 - [1 Modifies, 1 Uses, 1 Pattern, with stmt#]
stmt s; assign a; variable v; 
Select s such that Modifies(a, v) and Uses(s, v) pattern a("v2",_) with s.stmt# = 1
none
5000
191 - [1 Modifies, 1 Uses, 1 Pattern]
stmt s; assign a; variable v; 
Select s such that Modifies(a, v) and Uses(s, v) pattern a(_,_"v1+6"_)
none
5000
192 - [1 Modifies, 1 Uses, 1 Pattern]
stmt s; assign a; variable v; 
Select s such that Modifies(a, v) and Uses(s, v) pattern a("v2",_)
15, 16, 20, 27, 24, 32, 34, 38, 48, 50
5000
193 - [1 Modifies, 1 Follows, 1 Parent, with varName]
stmt s1; stmt s2; stmt s3; variable v;
Select s1 such that Modifies(s2, v) and Follows(s1, s2) and Parent(s3, s1) with v.varName = "v6"
23, 26
5000
194 - [1 Modifies, 1 Follows, 1 Parent, with varName]
stmt s1; stmt s2; stmt s3; variable v;
Select s1 such that Modifies(s2, v) and Follows(s1, s2) and Parent(s3, s1) with v.varName = "v8"
19
5000
195 - [1 Modifies, 1 Follows, 1 Parent]
stmt s1; stmt s2; stmt s3; variable v;
Select s3 such that Modifies(s2, v) and Follows(s1, s2) and Parent(s3, s1)
16, 24, 41
5000
196 - [1 Modifies, 1 Follows, 1 Parent]
stmt s1; stmt s2; stmt s3; variable v;
Select s3 such that Modifies(s2, v) and Follows(s1, s2) and Parent(s1, s3)
17, 18, 19, 20, 21, 22, 23, 24
5000
197 - [1 Modifies, 1 Parent*, 1 Follows*, with value]
stmt s1; stmt s2; stmt s3; constant c;
Select s3 such that Modifies(s1,_) and Parent*(s2, s1) and Follows*(s2, s3) with s1.stmt# = c.value
32, 33, 34, 35, 36, 37, 38, 39
5000
198 - [1 Modifies, 1 Parent*, 1 Follows*]
stmt s1; stmt s2; prog_line s3; constant c;
Select s3 such that Modifies(s1,"v10") and Parent*(s2, s1) and Follows*(s2, s3)
32, 33, 34, 35, 36, 37, 38, 39
5000
199 - [1 Modifies, 1 Calls, 1 Next]
stmt s1; procedure p, q;
Select p such that Modifies(s1,"v11") and Calls(p,q) and Next(12, s1)
proc1, PROC2, proc4, proc5
5000
200 - [1 Modifies, 1 Calls, 1 Next, with procName]
stmt s1; procedure p, q;
Select p.procName such that Modifies(s1,"v11") and Calls(p,q) and Next(12, s1) with q.procName = "PROC2"
proc1
5000
201 - [1 Modifies, 1 Calls*, 1 Next*, with procName and varName]
stmt s; procedure p, q; variable v;
Select s such that Modifies(s, v) and Calls(p, q) and Next*(28, s) with p.procName = "proc1" and v.varName = "v6"
24, 27
5000
202 - [1 Modifies, 1 Calls*, 1 Next*]
stmt s; procedure p, q; variable v;
Select s such that Modifies(s, "v8") and Calls(p, q) and Next*(28, s)
none
5000
203 - [1 Uses, 1 Follows*, 1 Parent*, with varName and value]
stmt s1, s2, s3; variable v; constant c;
Select s1 such that Uses(s3, v) and Follows*(s2, s3) and Parent*(s2, s1) with v.varName = "v12" and s1.stmt# = c.value
30
5000
204 - [1 Uses, 1 Follows*, 1 Parent]
stmt s1, s2, s3; constant c;
Select s1 such that Uses(s3, "v12") and Follows*(s2, s3) and Parent(s2, s1);
none
5000
205 = [1 Uses, 1 Calls*, 1 Next]
stmt s; procedure p, q; constant c;
Select p such that Calls*(p, q) and Next(12, 15) and Uses(s, "v1")
none
5000
206 = [1 Uses, 1 Calls*, 1 Next, with value and stmt#]
stmt s1, s2; procedure p, q; constant c;
Select p such that Calls*(p, q) and Next(12, 13) and Uses(s2, "v11") with c.value = s1.stmt#
proc1, PROC2, proc4, proc5
5000
207 - [1 Uses, 1 Next*, 1 Follows, with procName, varName, value and stmt#]
stmt s1; prog_line n; constant c; procedure p;
Select n such that Next*(55, n) and Follows(s1, n) and Uses(s1, "v5") with p.procName = "proc4" and c.value = 1 and s1.stmt# = 54
56
5000
208 - [1 Uses, 1 Parent*, 1 Calls, with procName and stmt# BOOLEAN]
procedure p, q; stmt s1, s2;
Select BOOLEAN such that Calls(p, q) and Parent*(s1, s2) and Uses(s1, "x") with p.procName = "PROC2" and s1.stmt# = 41
TRUE
5000
209 - [1 Uses, 1 Parent*, 1 Calls]
procedure p, q; stmt s1, s2;
Select BOOLEAN such that Calls(p, q) and Parent*(s1, s2) and Uses(s1, "x")
TRUE
5000
210 - [1 Pattern, 1 Follows, 1 Parent*, with procName and value BOOLEAN]
stmt s1, s2; procedure p; assign a; constant c;
Select BOOLEAN such that Follows(s1, a) and Parent*(s2, s1) pattern a ("v9", _) with p.procNmae = "proc1" and s1.stmt# = c.value
FALSE
5000
211 - [1 Pattern, 1 Follows, 1 Parent*, with procName and value BOOLEAN]
stmt s1, s2; procedure p; assign a; constant c;
Select BOOLEAN such that Follows(s1, a) and Parent*(s2, _) pattern a ("v9", _)
TRUE
5000
212 - [1 Pattern, 1 Follows*, 1 Next, with varName and stmt# BOOLEAN]
stmt s; variable v; assign a;
Select BOOLEAN such that Follows*(s, a) and Next(s, a) pattern a (v, _) with v.varName = "v7" and a.stmt# = 35
TRUE
5000
213 - [1 Pattern, 1 Follows*, 1 Next]
stmt s; variable v; assign a;
Select BOOLEAN such that Follows*(s, a) and Next(s, a) pattern a (v, _) 
TRUE
5000
214 - [1 Pattern, 1 Calls*, 1 Parent, with procName and stmt# BOOLEAN]
stmt s; variable v; procedure p, q; assign a;
Select BOOLEAN such that Calls(p, q) and Parent(40,s) pattern a ("y", _) with p.procName = "PROC2" and s.stmt# = 1;
FALSE
5000
215 - [1 Pattern, 1 Next*, 1 Calls, with 3 in tuple]
assign a; prog_line n; stmt s; procedure p;
Select <a, n, p> such that Next*(55, n) and Calls(p, "proc3") pattern a ("v2", _"400"_)
43 54 proc1, 43 55 proc1, 43 56 proc1, 43 57 proc1, 43 58 proc1, 43 54 PROC2, 43 55 PROC2, 43 56 PROC2, 43 57 PROC2, 43 58 PROC2
5000
216 - [1 Follows, 1 Next, 1 Calls, with 4 in tuple]
stmt s1, s2; procedure p, q;
Select <s1, s2, p, q> such that Follows(s1, s2) and Next(s2, 10) and Calls(p, q) with p.procName = "proc4"
8 9 proc4 proc5
5000
217 - [1 Follows, 1 Follows*, 1 Calls*, with 4 in tuple]
stmt s1, s2; procedure p, q;
Select <s1, s2, p, q> such that Follows*(37, s1) and Follows(s1, s2) and Calls*(p, q)
38 39 proc1 PROC2, 38 39 proc1 proc4, 38 39 proc1 proc3, 38 39 PROC2 proc3, 38 39 proc4 proc5, 38 39 proc5 proc6, 38 39 proc1 proc5, 38 39 proc1 proc6, 38 39 proc4 proc6
5000
218 - [1 Parent, 1 Parent*, 1 Calls, with same syn in tuple]
stmt s1, s2; procedure p, q;
Select <s1, s1, s2> such that Calls(p, q) and Parent(29, s1) and Parent*(s2, 29)
30 30 24, 30 30 16, 31 31 16, 31 31 24
5000
219 - [1 Parent, 1 Next, 1 Next*]
stmt s1, s2; prog_line n1, n2;
Select <s1, n1> such that Parent(s1, s2) and Next(s2, n1) and Next*(48, n1)
none
5000
220 - [1 Modifies, 1 Follows, 1 Parent, 1 Uses, 1 Pattern]
stmt s1, s2; assign a; variable v;
Select s3 such that Modifies(s1, v) and Follows(s1, s2) and Parent(16, s2) and Uses(a, v) pattern a ("a", _)
none
5000
221- [1 Modifies, 1 Follows, 1 Calls, 1 Uses, 1 Pattern]
stmt s1; assign a; variable v;
Select s1 such that Modifies(61, "v10") and Follows(a, s1) and Calls("proc5", "proc6") and Uses(a, v) pattern a ("a", _)
60
5000
222 - [1 Pattern Exact] All assign statements with exact pattern on the RHS
assign a; 
Select a pattern a(_, "v4 /    100 + 5 / (2 + 4)")
52
5000
223 - [1 Pattern Exact] All assign statements with exact pattern on the RHS
assign a; 
Select a pattern a(_, "100 + 5 / (2 + 4)")
none
5000
224 - [1 Pattern Exact] All assign statements with exact pattern on the RHS
assign a; 
Select a pattern a(_, "v2")
50
5000
225 - [1 Pattern Exact] Assign statements that modifies given variable with exact pattern on the RHS
assign a;
Select a pattern a("v1", "v1 * 2")
47
5000
226 - [1 Pattern Exact] While statements should only have wild
while w;
Select w pattern w(_, "v3 > 10")
none
5000
227 - [1 Pattern Exact] If statements should only have wild
If ifs;
Select ifs pattern if(_, _, "v1 == 0")
none
5000
228 - [1 Pattern] If statements should only have wild
If ifs;
Select ifs pattern if(_, _, _"v1"_)
none
5000
229 - [Modifies] procedure as 1st argument
procedure p;
Select p such that Modifies(p, "a")
proc1, proc4, proc5
5000
230 - [Modifies] procedure as 1st argument
procedure p, q, r; variable v; assign a;
Select v such that Modifies(p, v) and Modifies(q, v) and Modifies(r, v) and Modifies(a, v)
v1, v2, a, v10, v12, v3, v4, v5, v6, v7, v9, x, y, z
5000
231 - [Next] 2 synonyms
prog_line n1, n2;
Select n2 such that Next(n1, n2) and Next(n2, n1)
54, 55
5000
232 - [with read print call]
stmt s; call c; read r; print pr;
Select <s, c, r, pr> such that Parent(s, c) with r.varName = "v1" and pr.varName = "v1" and c.procName = "PROC2"
16 20 1 14, 16 20 1 17, 16 20 1 49
5000
233 - [Affects] TRUE is affects relationship is present

Select BOOLEAN such that Affects(_, _) 
TRUE
5000
234 - [Affects] TRUE if any assignment affects given assignment

Select BOOLEAN such that Affects(_, 19)
TRUE
5000
235 - [Affects] TRUE if given assignment affects any assignment

Select BOOLEAN such that Affects(36, _)
FALSE
5000
236 - [Affects] FALSE if given synonym is not assignment

Select BOOLEAN such that Affects(37, _)
FALSE
5000
237 - [Affects] FALSE if given synonyms are not from the same procedure

Select BOOLEAN such that Affects(47, 50)
FALSE
5000
238 - [Affects] TRUE if given assignment affects another given assignment

Select BOOLEAN such that Affects(28, 27)
TRUE
5000
239 - [Affects] All assignment affected by the given assignment
assign a;
Select a such that Affects(18,a) 
19
5000
240 - [Affects] All assignment affecting the given assignment
prog_line n;
Select n such that Affects(n, 33)
30
5000
241 - [Affects] All assignment affected by the given assignment
assign a;
Select a such that Affects(32,a) 
none
5000
242 - [Affects] All assignment affecting the some statement
assign a1, a2;
Select <a1, a2> such that Affects(a1, a2)
18 19, 27 28, 28 27, 30 33, 21 35, 22 35, 23 35, 30 30, 40 42, 40 44 
5000
243 - [Affects] All assignment affected by some statement
assign a1,  a2;
Select <a1, a2> such that Affects(a1 ,a2) and Affects(a2, a1) 
28 27, 27 28, 30 30
5000
244 - [Affects*] TRUE is affects relationship is present

Select BOOLEAN such that Affects*(_, _) 
TRUE
5000
245 - [Affects*] TRUE if any assignment affects given assignment

Select BOOLEAN such that Affects*(_, 19)
TRUE
5000
246 - [Affects*] TRUE if given assignment affects any assignment

Select BOOLEAN such that Affects*(36, _)
FALSE
5000
247 - [Affects*] FALSE if given synonym is not assignment

Select BOOLEAN such that Affects*(37, _)
FALSE
5000
248 - [Affects*] FALSE if given synonyms are not from the same procedure

Select BOOLEAN such that Affects*(47, 50)
FALSE
5000
249 - [Affects*] TRUE if given assignment affects directly or indirectly another given assignment

Select BOOLEAN such that Affects*(27, 27)
TRUE
5000
250 - [Affects*] All assignment affected directly or indirectly by the given assignment
assign a;
Select a such that Affects*(18,a) 
19
5000
251 - [Affects*] All assignment affecting directly or indirectly the given assignment
assign a;
Select a such that Affects*(a, 35)
21, 22, 23
5000
252 - [Affects*] All assignment affected directly or indirectly by the given assignment
prog_line n;
Select n such that Affects*(32, n) 
none
5000
253 - [Affects*] All assignment affected directly or indirectly by some statement
assign a1,  a2;
Select <a1, a2> such that Affects*(a1 ,a2) and Affects*(a2, a1) 
28 27, 27 28, 30 30, 28 28, 27 27
5000
254 - [Modifies] LHS is call
call c;
Select c such that Modifies(c, "a")
37, 57
5000
255 - [Modifies] LHS is prog_line
prog_line n;
Select n such that Modifies(n, "v1")
1, 18, 20, 47, 50, 16, 34, 48
5000
256 - [Uses] LHS is call
call c;
Select c such that Uses(c, "x")
20
5000
257 - [Uses] LHS is prog_line
prog_line n; 
Select n such that Uses(n, "v7")
28, 16, 24
5000
258 - [Uses] LHS is a procedure
procedure p;
Select p such that Uses(p, "unmodified")
proc1, proc4
5000
259 - [Follows] LHS is if
if ifs; assign a;
Select a such that Follows(ifs, a)
32
5000
260 - [Follows] LHS is while
while w; print p;
Select w such that Follows(w, p)
54
5000
261 - [Follows] LHS is assign
assign a;
Select a such that Follows(a, 59)
none
5000
262 - [Follows] LHS is call
call c;
Select c such that Follows(c, 35)
34
5000
263 - [Follows] LHS is prog_line
prog_line n1, n2;
Select n1 such that Follows(n1, 43)
42
5000
264 - [Follows*] LHS is read
read r1, r2;
Select BOOLEAN such that Follows*(r1, r2)
TRUE
5000
265 - [Follows*] LHS is print
print p; while w;
Select p such that Follows*(p, w)
53
5000
266 - [Follows*] LHS is call
call c;
Select c such that Follows*(c, 49)
48
5000
267 - [Follows*] LHS is prog_line
prog_line n; if ifs;
Select n such that Follows*(n, ifs) with ifs.stmt# = 41
40
5000
268 - [Pattern] Pattern while with LHS is a variable
variable v; while w;
Select v pattern w(v, _)
v3, v8, x, v9, z, v10
5000
269 - [Pattern] Pattern if with LHS is a variable
variable v; if ifs;
Select v pattern ifs(v, _, _)
v1, v2, v3, v4, x, unmodified
5000
270 - [Next] LHS is read
read r;
Select r such that Next(r, 3)
2
5000
271 - [Next] LHS is assign
assign a;
Select a such that Next(a, 14)
none
5000
272 - [Next] LHS is print
print p; read r;
Select p such that Next(p, r)
25, 45
5000
273 - [Next] LHS is if
if ifs;
Select ifs such that Next(ifs, _)
41, 16, 29
5000
274 - [Next] LHS is while
while w; prog_line n;
Select w such that Next(w, n) and Next(n, w)
54
5000
275 - [Next] LHS is call
call c;
Select BOOLEAN such that Next(c, c)
FALSE
5000
276 - [Next*] LHS is read
read r;
Select r such that Next*(r, 4)
1, 2, 3
5000
277 - [Next*] LHS is assign
assign a; print p;
Select a such that Next*(a, 24)
21, 22, 23, 27, 28, 30
5000
278 - [Next*] LHS is print
print p;
Select p such that Next*(p, 16)
14, 15
5000
279 - [Next*] LHS is if
if ifs1, ifs2;
Select ifs1 such that Next*(ifs1, ifs2)
16, 29
5000
280 - [Next*] LHS is while
while w; call c;
Select w such that Next*(w, c)
24, 54
5000
281 - [Next*] LHS is call
call c1, c2;
Select c1 such that Next*(c1, c2)
34, 20
5000
